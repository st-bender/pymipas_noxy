# -*- coding: utf-8 -*-
# vim:fileencoding=utf-8
import numpy as np
import pandas as pd
import xarray as xr

from mipas_noxy.noy_ubc import noy_ese


def _ap_da():
    np.random.seed(1234)
    ts = pd.date_range("2000-01-01", "2005-01-01") + pd.to_timedelta(12, unit="h")
    # roughly mimic Ap distribution
    app = xr.DataArray(
        np.exp(2 + 1 * np.random.randn(ts.shape[0])),
        dims=["time"],
        coords={"time": ts},
    )
    return app


def test_noy_ese_dens():
    t1 = xr.DataArray(pd.to_datetime(["2004-01-12 12"]), dims=["time"])
    ap = _ap_da()
    noy_ese1 = noy_ese(t1, 0.1, 1e-3, 0.03, 193, ap)
    np.testing.assert_allclose(
        noy_ese1,
        np.array([
            0.00000000e+00, 2.43317550e-03, 3.41439268e-03, 4.39068517e-03,
            5.44067696e-03, 6.59569796e-03, 7.87460283e-03, 9.29320161e-03,
            1.08692566e-02, 1.26318853e-02, 1.46319856e-02, 1.69377649e-02,
            1.96101574e-02, 2.26742388e-02, 2.61170261e-02, 2.99081867e-02,
            3.40040844e-02, 3.83224821e-02, 4.27138882e-02, 4.69592592e-02,
            5.08038970e-02, 5.40087507e-02, 5.64007345e-02, 5.79026677e-02,
            5.84358158e-02, 5.75247309e-02, 5.59474068e-02, 5.38373496e-02,
            5.13234819e-02, 4.85188825e-02, 4.55121430e-02, 4.23661620e-02,
            3.91266688e-02, 3.58356929e-02, 3.25420184e-02, 2.93027518e-02,
            2.61824127e-02, 2.32484620e-02, 2.05570826e-02, 1.81350798e-02,
            1.59749186e-02, 1.40469051e-02, 1.23158387e-02, 1.07520755e-02,
            9.33550624e-03, 8.05479057e-03, 6.90424768e-03, 5.88083931e-03,
            4.98217767e-03, 4.20616324e-03, 3.55021602e-03, 3.00750503e-03,
            2.56424918e-03, 2.20195317e-03, 1.90189650e-03, 1.64844537e-03,
            1.43060871e-03, 1.24182799e-03, 1.07813355e-03, 9.36268834e-04,
            8.13108033e-04, 7.05875339e-04, 6.12323557e-04, 5.30683763e-04,
            4.59527454e-04, 3.97761437e-04, 3.44508894e-04, 2.98796838e-04,
            2.59457738e-04, 2.25329892e-04, 1.95462992e-04, 1.69164360e-04,
            1.45967970e-04, 1.25608350e-04, 1.07929831e-04, 9.27596554e-05,
            7.98485751e-05, 6.88911195e-05, 5.95691612e-05, 5.15875753e-05,
            4.47072541e-05, 3.87585616e-05, 3.36202902e-05, 2.91874950e-05,
            2.53561295e-05, 2.20259131e-05, 1.91087526e-05, 1.65344930e-05,
            1.42532834e-05, 1.22341130e-05, 1.04622718e-05, 8.93518136e-06,
            7.64812568e-06, 6.58252405e-06, 5.71182095e-06, 5.00661610e-06,
            4.43209316e-06, 3.95064862e-06, 3.52978893e-06, 3.14779897e-06,
            2.79469060e-06, 2.46872586e-06, 2.17145539e-06, 1.90390837e-06,
            1.66485686e-06, 1.45136829e-06, 1.26022457e-06, 1.08901688e-06,
            9.36584967e-07, 7.82229912e-07, 6.51094887e-07, 5.40776178e-07,
            4.48487579e-07, 3.71395144e-07, 3.06839456e-07, 2.52541093e-07,
            2.06770014e-07, 1.68350529e-07, 1.36399703e-07, 1.10044214e-07,
            8.83643830e-08, 7.04904203e-08, 5.56824834e-08, 4.33430816e-08,
            3.29965909e-08, 2.42527175e-08, 1.67454217e-08, 9.97260218e-09,
        ])
    )


def test_noy_ese_flux():
    t1 = xr.DataArray(pd.to_datetime(["2004-01-12 12"]), dims=["time"])
    ap = _ap_da()
    noy_esef = noy_ese(t1, 0.1, 1e-3, 0.03, 193, ap, xtype="flux")
    np.testing.assert_allclose(
        noy_esef,
        np.array([
            0.00000000e+00, 2.17313561e-03, 3.04948752e-03, 3.92144106e-03,
            4.85921745e-03, 5.89079830e-03, 7.03302323e-03, 8.30001261e-03,
            9.70763045e-03, 1.12818824e-02, 1.30682267e-02, 1.51275812e-02,
            1.75143681e-02, 2.02509830e-02, 2.33258306e-02, 2.67118198e-02,
            3.03699781e-02, 3.42268572e-02, 3.81489422e-02, 4.19405992e-02,
            4.53743504e-02, 4.82366929e-02, 5.03730391e-02, 5.17144567e-02,
            5.21906258e-02, 5.13769110e-02, 4.99681597e-02, 4.80836099e-02,
            4.58384058e-02, 4.33335414e-02, 4.06481401e-02, 3.78383784e-02,
            3.49450984e-02, 3.20058378e-02, 2.90641669e-02, 2.61710894e-02,
            2.33842291e-02, 2.07638375e-02, 1.83600929e-02, 1.61969360e-02,
            1.42676368e-02, 1.25456752e-02, 1.09996125e-02, 9.60297283e-03,
            8.33779604e-03, 7.19395383e-03, 6.16637249e-03, 5.25233848e-03,
            4.44971919e-03, 3.75663947e-03, 3.17079506e-03, 2.68608502e-03,
            2.29020110e-03, 1.96662462e-03, 1.69863580e-03, 1.47227166e-03,
            1.27771578e-03, 1.10911055e-03, 9.62910567e-04, 8.36207311e-04,
            7.26209030e-04, 6.30436578e-04, 5.46882921e-04, 4.73968188e-04,
            4.10416541e-04, 3.55251622e-04, 3.07690318e-04, 2.66863631e-04,
            2.31728805e-04, 2.01248291e-04, 1.74573346e-04, 1.51085318e-04,
            1.30367987e-04, 1.12184254e-04, 9.63950849e-05, 8.28461861e-05,
            7.13149471e-05, 6.15285436e-05, 5.32028476e-05, 4.60742749e-05,
            3.99292718e-05, 3.46163317e-05, 3.00272010e-05, 2.60681503e-05,
            2.26462529e-05, 1.96719456e-05, 1.70665497e-05, 1.47674080e-05,
            1.27299973e-05, 1.09266210e-05, 9.34414123e-06, 7.98025493e-06,
            6.83075029e-06, 5.87903232e-06, 5.10138356e-06, 4.47154582e-06,
            3.95842366e-06, 3.52843237e-06, 3.15255107e-06, 2.81138538e-06,
            2.49601464e-06, 2.20488661e-06, 1.93938622e-06, 1.70043265e-06,
            1.48692921e-06, 1.29625672e-06, 1.12554104e-06, 9.72630771e-07,
            8.36489658e-07, 6.98630936e-07, 5.81510657e-07, 4.82982000e-07,
            4.00556527e-07, 3.31703164e-07, 2.74046713e-07, 2.25551359e-07,
            1.84671957e-07, 1.50358463e-07, 1.21822307e-07, 9.82834984e-08,
            7.89206480e-08, 6.29569230e-08, 4.97315494e-08, 3.87108920e-08,
            2.94701581e-08, 2.16607656e-08, 1.49557943e-08, 8.90680385e-09,
        ])
    )
